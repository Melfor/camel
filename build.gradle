plugins {
    id 'org.springframework.boot' version '2.3.3.RELEASE'
    id 'org.liquibase.gradle' version '2.0.4'
    id 'nu.studer.jooq' version '5.0.2'
    id 'java'
}

group 'org.example'
version '1.0-SNAPSHOT'

repositories {
    mavenCentral()
}

dependencies {
    implementation 'org.apache.camel.springboot:camel-spring-boot-starter:3.6.0'
    implementation 'org.springframework.boot:spring-boot-starter-web:2.3.4.RELEASE'
    implementation 'org.springframework.boot:spring-boot-starter-jooq:2.3.5.RELEASE'
    implementation 'org.apache.camel:camel-kafka:3.6.0'
    implementation 'org.apache.camel:camel-jackson:3.6.0'
    implementation 'org.apache.camel:camel-jetty:3.6.0'
    implementation 'org.apache.camel:camel-sql:3.6.0'
    implementation 'org.liquibase:liquibase-core:4.2.0'
    implementation 'org.postgresql:postgresql:42.2.18'

    jooqGenerator 'org.postgresql:postgresql:42.2.18'

    liquibaseRuntime 'org.liquibase:liquibase-core:4.2.0'
    liquibaseRuntime 'org.liquibase:liquibase-groovy-dsl:2.1.2'
    liquibaseRuntime 'org.postgresql:postgresql:42.2.18'
    liquibaseRuntime 'ch.qos.logback:logback-core:1.2.3'
    liquibaseRuntime 'ch.qos.logback:logback-classic:1.2.3'

    annotationProcessor'org.mapstruct:mapstruct-processor:1.4.1.Final'
    annotationProcessor 'org.projectlombok:lombok:1.18.12'
    annotationProcessor 'org.springframework.boot:spring-boot-configuration-processor:2.3.3.RELEASE'
    implementation 'org.mapstruct:mapstruct:1.4.1.Final'
    compileOnly 'org.projectlombok:lombok:1.18.12'

    testAnnotationProcessor 'org.projectlombok:lombok:1.18.12'
    testAnnotationProcessor 'org.mapstruct:mapstruct-processor:1.4.1.Final'
    testImplementation 'org.springframework.boot:spring-boot-starter-test:2.3.3.RELEASE'
    testCompile 'junit:junit:4.12'
    testCompileOnly 'org.projectlombok:lombok:1.18.12'
    testCompileOnly 'org.mapstruct:mapstruct:1.4.1.Final'
}

liquibase {
    activities {
        main {
            logLevel 'info'
            changeLogFile "db/db.changelog-master.xml"
            classpath "${projectDir}/src/main/resources"
            url 'jdbc:postgresql://localhost:5433/camel'
            username 'postgres'
            password 'root'
            defaultSchemaName 'public'
        }
    }
    runList = "main"
}

jooq {
    configurations {
        main {
            generateSchemaSourceOnCompilation = false

            generationTool {
                logging = org.jooq.meta.jaxb.Logging.WARN
                jdbc {
                    driver = 'org.postgresql.Driver'
                    url = 'jdbc:postgresql://localhost:5433/camel'
                    user = 'postgres'
                    password = 'root'
                }
                generator {
                    name = 'org.jooq.codegen.DefaultGenerator'
                    database {
                        name = 'org.jooq.meta.postgres.PostgresDatabase'
                        inputSchema = 'public'
                        excludes = "databasechangelog|databasechangeloglock"
                        forcedTypes {
                            forcedType {
                                name = 'varchar'
                                includeExpression = '.*'
                                includeTypes = 'JSONB?'
                            }
                            forcedType {
                                name = 'varchar'
                                includeExpression = '.*'
                                includeTypes = 'INET'
                            }
                        }
                    }
                    generate {
                        deprecated = false
                        records = true
                        immutablePojos = true
                        fluentSetters = true
                    }
                    target {
                        packageName = 'ru.rtmis.melfor.camel.jooq.schema'
                        directory = 'src/main/java'
                    }
                    strategy.name = 'org.jooq.codegen.DefaultGeneratorStrategy'
                }
            }
        }
    }
}

tasks["generateJooq"].dependsOn("update")
tasks["generateJooq"].inputs.files(project.fileTree("src/main/resources/db/changelog"))
        .withPathSensitivity(PathSensitivity.RELATIVE)
tasks["generateJooq"].outputs.cacheIf { true }
